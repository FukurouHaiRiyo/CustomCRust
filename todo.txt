1. Create a list library similar to the one in C++. The list library will let me create a new list 
(example: list<string> cars or list<int> numbers), it will let me create a list that will store variables, like strings or integers
(example: list<string> cars = {"Volvo", "BMW", "Ford", "Mazda"};), it will let me print the list. 
Also, it will have function like back() for accessing the last element in the list and front() to access the first element
int the list. It will also have the functions .push_front() to insert an element at the beginning of the list and .push_back() to add an element at the end
It will also have functions like .pop_front() to remove an element from the beginning of the list and .pop_back() to remove an element at the end
The .size() function will find out how many elements a list has and the .empty() function to find out if a list is empty or not


2. Create a vector library, similar to the one in C/C++

3. Implement <climits> (limits.h), similar to the one in C/C++: 
    This header defines constants with the limits of fundamental integral types for the specific system and compiler implementation used.
    The limits for fundamental floating-point types are defined in <cfloat> (<float.h>).
    The limits for width-specific integral types and other typedef types are defined in <cstdint> (<stdint.h>).
